#pragma once

#include <map>
#include <iostream>

#define MAX_INPUT_LENGTH 1001
#define MAX_MORSE_LENGTH 7
#define MAX_SYMBOLS 50
#define PAUSE "pause"
#define WITHOUT_PAUSE "without_pause"

using namespace std;

enum error_type
{
	NoError = -1,
	OutputFileError,			// Невозможно создать указанный выходной файл.										0
	InputFileError,				// Указанный входной файл не существует или к нему нет доступа.						1
	InputFileEmpty,				// Входной файл пуст.																2
	InvalidCharacters,			// Входной файл содержит недопустимые символы.										3
	StringSizeOutOfRange,		// Размерность сообщения во входном файле находится вне допустимого диапазона.		4
	NoDecryptionMode,			// Отсутствует указание режима расшифровки.											5
	IncorrectDecryptionMode		// Выбран некорректный режим расшифровки.											6
};

map <string, char> alphabet = {
	{".-", 'А'}, {"-...", 'Б'}, {".--", 'В'}, {"--.", 'Г'}, {"-..", 'Д'},
	{".", 'Е'}, {"...-", 'Ж'}, {"--..", 'З'}, {"..", 'И'}, {".---", 'Й'},
	{"-.-", 'К'}, {".-..", 'Л'}, {"--", 'М'}, {"-.", 'Н'}, {"---", 'О'},
	{".--.", 'П'}, {".-.", 'Р'}, {"...", 'С'}, {"-", 'Т'}, {"..-", 'У'},
	{"..-.", 'Ф'}, {"....", 'Х'}, {"-.-.", 'Ц'}, {"---.", 'Ч'}, {"----", 'Ш'},
	{"--.-", 'Щ'}, {"--.--", 'Ъ'}, {"-.--", 'Ы'}, {"-..-", 'Ь'}, {"..-..", 'Э'},
	{"..--", 'Ю'}, {".-.-", 'Я'}, {"-.-.--", '!'}, {"..--..", '?'}, {"-.--.", '('},
	{"-.--.-", ')'}, {"---...", ':'}, {"-.-.-.", ';'}, {"-..-.", '/'}, {".--.-.", '@'},
	{"-----", '0'}, {".----", '1'}, {"..---", '2'}, {"...--", '3'}, {"....-", '4'},
	{".....", '5'}, {"-....", '6'}, {"--...", '7'}, {"---..", '8'}, {"----", '9' }
};

//char morse_alphabet[MAX_SYMBOLS][MAX_MORSE_LENGTH] = {
//	".-", "-...", ".--", "--.", "-..", ".", "...-", "--..",
//	"..", ".---", "-.-", ".-..", "--", "-.", "---", ".--.",
//	".-.", "...", "-", "..-", "..-.", "....", "-.-.",
//	"---.", "----", "--.-", "--.--", "-.--", "-..-",
//	"..-..", "..--", ".-.-", "-.-.--", "..--..", "-.--.",
//	"-.--.-", "---...", "-.-.-.", "-..-.", ".--.-.",
//	"-----", ".----", "..---", "...--", "....-", ".....",
//	"-....", "--...", "---..", "----"
//};
//
//char russian_alphabet[MAX_SYMBOLS] = {
//    'А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ж', 'З', 'И', 'Й', 'К', 'Л',
//    'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х', 'Ц', 'Ч',
//    'Ш', 'Щ', 'Ъ', 'Ы', 'Ь', 'Э', 'Ю', 'Я', '!', '?', '(', ')',
//    ':', ';', '/', '@', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' 
//};


int validate_data(char input[MAX_INPUT_LENGTH], char mode[14]);

void convert_with_pause(char input[MAX_INPUT_LENGTH]);

void convert_without_pause(char input[MAX_INPUT_LENGTH], int inputLength, int curPos, char output[MAX_INPUT_LENGTH]);

int convert_symbol(char symbol[MAX_MORSE_LENGTH], map <string, char> alphabet);
